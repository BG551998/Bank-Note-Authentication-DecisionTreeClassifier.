# -*- coding: utf-8 -*-
"""Bank-Note-Authentication-DecisionTreeClassifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qlr0xFx7Yt_xvA8B0xrXJM-xLEGIbQpu

*# import all packages and set plots to be embedded inline*
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""*Load DataSet*"""

df=pd.read_csv("BankNote_Authentication.csv")
df.head()

"""*Data Assessing*"""

df.info()

df.describe()

"""*Data Visualization*"""

corrmat=df.corr()
f,ax=plt.subplots(figsize=(10,10))
sns.heatmap(corrmat,vmax=0.8 ,square=True ,annot=True,fmt='.2f')
plt.show()

sns.pairplot(df ,hue='class')

"""*Train Test Split Using Sklearn*"""

x=df.iloc[:,:-1]
y=df.iloc[:,-1]

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

"""*DecisionTreeClassifications*"""

from sklearn.tree import DecisionTreeClassifier
DTC=DecisionTreeClassifier()
DTC

DTC.fit(x_train,y_train)

y_predict=DTC.predict(x_test)
y_predict

"""**Evaluate the Clustering Model**"""

from sklearn.metrics import classification_report,confusion_matrix ,accuracy_score
print(classification_report(y_test,y_predict))

CM=(confusion_matrix(y_test,y_predict))
print(pd.DataFrame(CM))

print(accuracy_score(y_test,y_predict))

"""** Decision Tree **"""

DTC.feature_importances_

DTC.feature_importances_

from sklearn import tree
plt.figure(figsize=(15,10))
tree.plot_tree(DTC ,filled=True)